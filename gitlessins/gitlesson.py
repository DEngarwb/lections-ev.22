# GIT - распределенная система контроля версий.
# это система для отслеживания и ведения файлов в вашем проекте

# репозиторий - хранилище кода и истории его изменений

# GIThub - веб сайт для размещения git-репозиториев и совместной разработки проектов




# комманды git 
# 1. git init-создает новый гит репозиторий локально на вашем пк
# 2. git commit - как только мы достигаем определенного момента в разработке, то тогда сохраняем и комментируем изменения(фиксация изменений в репоситорий)

# git commit -m '<comment>'

# 3 git add - когда мы создаем или изменяем фалйы то при помощи этой команды загружаем все изменения в локальное хранилище


# git add <название файла> 
# git add .


# 4. git remote add - комманда для связывания проекта с удаленным репозиторием

# git remote add <название подключения> <ссылка на репозиторий>

# git remote add origin <url>


# 5 git push - после коммита изменений при помощи этой комманды мы отправляем наши изменения на удаленный репозиторий

# git push <название ветки>

#"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
#6. git branch - ветки очень важны в git. при помощи веток несколько программистов могут работать пралельно на одном и том же проекте. При помощи команды git branch мы можем создавать просматривать или удалять ветки

# создание ветки: git branch <название ветки>

# просмотр ветки: git branch or git branch --list

# удаление ветки: git branch -d <название ветки>

#7. git checkout - комманда используется для работы в комманде, она помогает переключаться по веткам

# git checkout <название ветки>

строчка ветки pony  

